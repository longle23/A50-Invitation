const http = require('http');

/**
 * Test API endpoints c·ªßa h·ªá th·ªëng QR Check-in
 */
async function testAPI() {
    console.log('üß™ B·∫Øt ƒë·∫ßu test API...\n');
    
    const baseUrl = 'http://localhost:3000';
    const testGuestId = 'STH00002'; // H√† VƒÉn Kh√¥i
    
    // Test 1: Trang ch·ªß
    console.log('1Ô∏è‚É£ Test trang ch·ªß...');
    try {
        const response = await makeRequest(`${baseUrl}/`);
        console.log(`‚úÖ Trang ch·ªß: ${response.statusCode} - OK`);
    } catch (error) {
        console.log(`‚ùå Trang ch·ªß: ${error.message}`);
    }
    
    // Test 2: Trang check-in h·ª£p l·ªá
    console.log('\n2Ô∏è‚É£ Test trang check-in h·ª£p l·ªá...');
    try {
        const response = await makeRequest(`${baseUrl}/checkin/${testGuestId}`);
        console.log(`‚úÖ Check-in page: ${response.statusCode} - OK`);
        if (response.body.includes('H√† VƒÉn Kh√¥i')) {
            console.log('‚úÖ T√™n kh√°ch hi·ªÉn th·ªã ƒë√∫ng');
        }
    } catch (error) {
        console.log(`‚ùå Check-in page: ${error.message}`);
    }
    
    // Test 3: Trang check-in kh√¥ng h·ª£p l·ªá
    console.log('\n3Ô∏è‚É£ Test trang check-in kh√¥ng h·ª£p l·ªá...');
    try {
        const response = await makeRequest(`${baseUrl}/checkin/INVALID_ID`);
        console.log(`‚úÖ Invalid ID: ${response.statusCode} - 404 (Expected)`);
    } catch (error) {
        console.log(`‚ùå Invalid ID: ${error.message}`);
    }
    
    // Test 4: API check-in
    console.log('\n4Ô∏è‚É£ Test API check-in...');
    try {
        const response = await makeRequest(`${baseUrl}/api/checkin/${testGuestId}`, 'POST');
        console.log(`‚úÖ API check-in: ${response.statusCode} - OK`);
        const data = JSON.parse(response.body);
        if (data.success) {
            console.log('‚úÖ Check-in th√†nh c√¥ng');
        }
    } catch (error) {
        console.log(`‚ùå API check-in: ${error.message}`);
    }
    
    // Test 5: API l·∫•y danh s√°ch check-in
    console.log('\n5Ô∏è‚É£ Test API danh s√°ch check-in...');
    try {
        const response = await makeRequest(`${baseUrl}/api/checkins`);
        console.log(`‚úÖ API checkins: ${response.statusCode} - OK`);
        const data = JSON.parse(response.body);
        console.log(`‚úÖ T·ªïng s·ªë check-in: ${data.total}`);
    } catch (error) {
        console.log(`‚ùå API checkins: ${error.message}`);
    }
    
    // Test 6: API xu·∫•t b√°o c√°o
    console.log('\n6Ô∏è‚É£ Test API xu·∫•t b√°o c√°o...');
    try {
        const response = await makeRequest(`${baseUrl}/api/export`);
        console.log(`‚úÖ API export: ${response.statusCode} - OK`);
        const data = JSON.parse(response.body);
        console.log(`‚úÖ S·ªë l∆∞·ª£ng b√°o c√°o: ${data.total}`);
    } catch (error) {
        console.log(`‚ùå API export: ${error.message}`);
    }
    
    console.log('\nüéâ Ho√†n th√†nh test API!');
}

/**
 * Th·ª±c hi·ªán HTTP request
 */
function makeRequest(url, method = 'GET') {
    return new Promise((resolve, reject) => {
        const options = {
            method: method,
            headers: {
                'Content-Type': 'application/json'
            }
        };
        
        const req = http.request(url, options, (res) => {
            let body = '';
            res.on('data', (chunk) => {
                body += chunk;
            });
            res.on('end', () => {
                resolve({
                    statusCode: res.statusCode,
                    body: body
                });
            });
        });
        
        req.on('error', (error) => {
            reject(error);
        });
        
        req.end();
    });
}

// Ch·∫°y test n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
    testAPI().catch(console.error);
}

module.exports = { testAPI };
